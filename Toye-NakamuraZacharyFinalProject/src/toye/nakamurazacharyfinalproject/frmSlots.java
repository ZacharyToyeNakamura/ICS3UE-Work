/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package toye.nakamurazacharyfinalproject;
/**
 *
 * @author Zachary Toye-Nakamura
 * Date: Aug 19 2023
 * This program lets the user play a game similar to slots. there are buttons to go back to the main page and the probability page
 * I want to try to make the payback rate (RTP return to player) 80% to 95% like a normal casino
 * 2 dollars per play
 * RTP: $1.75 so it's a 87.5% pay back rate
 * 
 */
public class frmSlots extends javax.swing.JFrame {

    // Declare a variable to hold the chance of a grand prize
    final int INTGRANDPRIZE = 1; // ex this is a 1/INTPRIZEPOOL chance
    // declare a variable to hold the chance of a major prize
    final int INTMAJORPRIZE = 3;
    // declare a variable to hold the chance of a minor prize
    final int INTMINORPRIZE = 10;
    // Declare a variable to hold the chance of a small prize
    final int INTSMALLPRIZE = 50;
    // Declare a variable to hold the chance of a tiny prize
    final int INTTINYPRIZE = 500;
    // Declare a variable to hold the total chance ()
    final int INTPRIZEPOOL = 5000;
    // an array that hold the win ranges for each prize starting from the highest
    final int [] INTWINRANGES = {0, INTGRANDPRIZE, INTGRANDPRIZE+INTMAJORPRIZE,INTGRANDPRIZE+INTMAJORPRIZE+INTMINORPRIZE,INTGRANDPRIZE+INTMAJORPRIZE+INTMINORPRIZE+INTSMALLPRIZE, INTGRANDPRIZE+INTMAJORPRIZE+INTMINORPRIZE+INTSMALLPRIZE+INTTINYPRIZE};
    
    
    // ALL IN dollars
    // Declare the amount won from a grand prize
    final int INTGRANDMONEY = 7000;
    // Declare the amount won from a major prize
    final int INTMAJORMONEY = 300;
    // Declare the amount won from a major prize
    final int INTMINORMONEY = 10;
    // Declare the amount won from a small prize
    final int INTSMALMONEY = 5;
    // Declare the maount won from a tiny prize
    final int INTTINYMONEY = 1;
    // declare a array to hold the win amounts for each prize from high to low
    final int [] INTWINMONEY = {0, INTGRANDMONEY,INTMAJORMONEY,INTMINORMONEY,INTSMALMONEY,INTTINYMONEY};
    final String [] STRPRIZENAMES = {"", "Grand", "Major","Minor","Small","Tiny"};
    
    
    // declare a variable to hold the user's  money 
    int intUserMoney = 100; // 100 dollars 
    // Declare a variable to hold the outcome of the most recent spins
    String [] strRecentSpins = new String[100];
    // Declare a variable to hold the size of recent spins
    int intRecentSpinsSize = 0;
    
    
    /**
     * This methods takes in a string and a list then it pushes the string to the top of the list (removing the )
     * @param strToBePushed - Any string but usually a result of a spin
     * @param strRecentSpins - Any list but usually it will be the most recent spins
     * @param intSize - The size of the strRecentSpins array
     * @return The array back but with strToBePushed at the top and the last string removed if it exists
     */
    public static String [] pushBack(String strToBePushed, String[] strRecentSpins, int intSize)
    {
        // for all of the strings in the array except the last one
        for (int i = strRecentSpins.length - 1; i > 0 ; i--)
        {
            // move all of the strings backwards
            strRecentSpins[i] = strRecentSpins[i-1];
        }
        // make the str to be pushed the top
        strRecentSpins[0] = strToBePushed;
        // return the list of strings
        return strRecentSpins;
    }
    
    
    /**
     * This method takes in a array of strings and formats them into 1 string then returns it
     * @param strRecentSpins A array of strings
     * @param intSize the size of the array
     * @return A formatted string that can be output to the GUI
     */
    public static String formatRecentSpins(String[] strRecentSpins, int intSize)
    {
        // Declare a variable to hold the output
        String strOutput = "";
        // for all of the elements in recent spins
        for (int i = 0; i < intSize; i++)
        {
            // Add the next part of the string
            strOutput += (i+1)+": " + strRecentSpins[i] + "\n";
        }
        // return the answer
        return strOutput;
    }
    
    /**
     * Creates new form frmSlots
     */
    public frmSlots() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        btnSlots = new javax.swing.JButton();
        lblSubtitle = new javax.swing.JLabel();
        btnLearnMore = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblSubtitle2 = new javax.swing.JLabel();
        lblPlayCost = new javax.swing.JLabel();
        lblMoney = new javax.swing.JLabel();
        lblResult = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtRecentSpins = new javax.swing.JTextArea();
        lblRecentSpinsTitle = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        lblTitle.setText("Welcome to slots");

        btnSlots.setIcon(new javax.swing.ImageIcon(getClass().getResource("/toye/nakamurazacharyfinalproject/slotsHeader.jpg"))); // NOI18N
        btnSlots.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSlotsActionPerformed(evt);
            }
        });

        lblSubtitle.setText("Click the spin button below to roll the slots!");

        btnLearnMore.setText("Learn More!");
        btnLearnMore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLearnMoreActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblSubtitle2.setText("After rolling a few times click learn more to find out more on the odds!");

        lblPlayCost.setText("Each play costs $2");

        lblMoney.setText("Money: $100");

        txtRecentSpins.setColumns(20);
        txtRecentSpins.setRows(5);
        jScrollPane1.setViewportView(txtRecentSpins);

        lblRecentSpinsTitle.setText("Most Recent Spins! (1 is the most recent)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSubtitle2)
                            .addComponent(lblSubtitle, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblPlayCost)
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblResult, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(79, 79, 79))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                                        .addGap(85, 85, 85)))
                                .addComponent(btnLearnMore))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnSlots)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblMoney))
                                    .addComponent(lblRecentSpinsTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitle)
                    .addComponent(btnBack))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSubtitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSubtitle2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblResult, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSlots)
                            .addComponent(lblMoney))
                        .addGap(3, 3, 3)
                        .addComponent(lblRecentSpinsTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnLearnMore))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPlayCost)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        // Make the the title page visible
        new frmTitlePage().setVisible(true);
        // Get rid of this frame, making the title page frame the current "main" frame.
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnLearnMoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLearnMoreActionPerformed
        // TODO add your handling code here:
        // Make the slots info visible
        new frmSlotsInfo().setVisible(true);
        // Get rid of this frame, making the slots info frame the current "main" frame.
        this.dispose();
    }//GEN-LAST:event_btnLearnMoreActionPerformed

    private void btnSlotsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSlotsActionPerformed
        // TODO add your handling code here:
        // subtract the spin cost from the user
        intUserMoney-=2;
        
        // Generate the random seed
        int intRandSeed = (int)(Math.random() * INTPRIZEPOOL);
        // for all of the prize ranges check if the random seed is within it
        // declare a variable to store if a message has been push back yet
        boolean boolPushedBack = false;
        for (int i = 1; i < INTWINRANGES.length; i++)
        {
            // if the rand seed is within the win range inclusive on 1 side, they win that prize
            if (intRandSeed >= INTWINRANGES[i-1] && intRandSeed < INTWINRANGES[i])
            {
                // display a win message
                lblResult.setText("You won the "+ STRPRIZENAMES[i]+" prize! You got $"+INTWINMONEY[i]+"!");
                // incraese money accordingly 
                intUserMoney += INTWINMONEY[i];
                // push back the outcme
                strRecentSpins = pushBack(STRPRIZENAMES[i], strRecentSpins, intRecentSpinsSize);
                // a message has been pushed back
                boolPushedBack = true;
            }
            
        }   
        // if soemthing hasn't been pushed back then pushback a lose
        if (!boolPushedBack)
        {
            //display a lose message
            lblResult.setText("You won nothing.");
            // push back a lose message
            strRecentSpins = pushBack("Lose", strRecentSpins, intRecentSpinsSize);
        }
        // Recent spins in now bigger
        intRecentSpinsSize++;
        
        // Display the most recent spins
        txtRecentSpins.setText(formatRecentSpins(strRecentSpins,intRecentSpinsSize));
        
        // display money
        lblMoney.setText("Money: $"+intUserMoney);
    }//GEN-LAST:event_btnSlotsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmSlots.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmSlots.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmSlots.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmSlots.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmSlots().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnLearnMore;
    private javax.swing.JButton btnSlots;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMoney;
    private javax.swing.JLabel lblPlayCost;
    private javax.swing.JLabel lblRecentSpinsTitle;
    private javax.swing.JLabel lblResult;
    private javax.swing.JLabel lblSubtitle;
    private javax.swing.JLabel lblSubtitle2;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextArea txtRecentSpins;
    // End of variables declaration//GEN-END:variables
}
